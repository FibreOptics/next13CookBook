name: '$(SourceBranchName).$(Rev:rr)'

trigger:
  branches:
    include:
      - main

pr:
  - main

variables:
  ImageName: 'next13cookbookImg'
  tag: $(Build.BuildNumber)

stages:
- stage: Build
  displayName: Build Image

  jobs:
  - job: Build
    displayName: Build
    # how long to run the job before automatically cancelling
    timeoutInMinutes: 30
    # how much time to give 'run always even if cancelled tasks' before stopping them
    cancelTimeoutInMinutes: 1 
    
    pool:
      name: Default
    
    steps:
      - task: NodeTool@0
        displayName: 'Install Node.js'
        inputs:
          versionSpec: '18.x'

        # Build
      - script: |
          npm run build
        displayName: 'Npm build'

      # ACR Login
      - task: Docker@2
        displayName: Registry Login
        inputs:
          containerRegistry: 'next13cookbookacr'
          command: 'login'
      - script: 'docker pull $(AcrRepositoryHostName)/$(ImageName):latest'
        displayName: Pull latest for layer caching
        continueOnError: true

      # Build images
      - task: Docker@2
        displayName: Build an image
        inputs:
          containerRegistry: 'next13cookbookacr'
          repository: '$(ImageName)'
          command: 'build'
          Dockerfile: '**/Dockerfile'
          buildContext: '$(Build.SourcesDirectory)'
          arguments: '--cache-from=$(AcrRepositoryHostName)/$(ImageName):latest'
          tags: |
            $(tag)
            latest

      # Create artifact
      - task: Docker@2
        displayName: Create artifact
        inputs:
          command: 'save'
          buildContext: '$(Build.SourcesDirectory)'
          arguments: '--output $(Build.ArtifactStagingDirectory)/$(ImageName).image.tar $(AcrRepositoryHostName)/$(ImageName):$(tag)'

      # Push artifact
      - task: PublishBuildArtifacts@1
        displayName: Save artifact
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(ImageName).image.tar'
          ArtifactName: '$(ImageName).image.tar'
          publishLocation: 'Container'

